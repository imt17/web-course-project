{"ast":null,"code":"var _jsxFileName = \"/Users/mariailas/Desktop/web-project-new-york/frontend/src/component-ajax.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityData = () => {\n  _s();\n  const [newYorkData, setNewYorkData] = useState([]);\n  const [fetchDataOnButtonClick, setFetchDataOnButtonClick] = useState(false);\n  const [number, setNumber] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/new-york-data');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setNewYorkData(data);\n        console.log('Fetched data:', data);\n        setNumber(prevNumber => prevNumber + 1); // Increment number to force re-render\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (fetchDataOnButtonClick) {\n      fetchData(); // Initial fetch\n      const intervalId = setInterval(fetchData, 10000); // Set interval to fetch data every 10 seconds\n      console.log('data ');\n      return () => clearInterval(intervalId); // Cleanup function to clear interval on unmount or condition change\n    }\n  }, [fetchDataOnButtonClick]); // Run effect when fetchDataOnButtonClick changes\n\n  // Function to start fetching data and set fetchDataOnButtonClick to true\n  const handleButtonClick = () => {\n    setFetchDataOnButtonClick(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New York City Attractions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: newYorkData.map(attraction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: attraction.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }, this), \" \", attraction.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Established:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }, this), \" \", attraction.established]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: attraction.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, attraction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), fetchDataOnButtonClick && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number: \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CityData, \"udfr1N3C6qQ+EV3WLfUyUFfdh5I=\");\n_c = CityData;\nexport default CityData;\nvar _c;\n$RefreshReg$(_c, \"CityData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CityData","_s","newYorkData","setNewYorkData","fetchDataOnButtonClick","setFetchDataOnButtonClick","number","setNumber","fetchData","response","fetch","ok","Error","data","json","console","log","prevNumber","error","intervalId","setInterval","clearInterval","handleButtonClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","attraction","name","location","established","description","id","_c","$RefreshReg$"],"sources":["/Users/mariailas/Desktop/web-project-new-york/frontend/src/component-ajax.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CityData = () => {\n  const [newYorkData, setNewYorkData] = useState([]);\n  const [fetchDataOnButtonClick, setFetchDataOnButtonClick] = useState(false);\n  const [number, setNumber] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/new-york-data');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setNewYorkData(data);\n        console.log('Fetched data:', data);\n        setNumber(prevNumber => prevNumber + 1); // Increment number to force re-render\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    if (fetchDataOnButtonClick) {\n      fetchData(); // Initial fetch\n      const intervalId = setInterval(fetchData, 10000); // Set interval to fetch data every 10 seconds\n      console.log('data ')\n      return () => clearInterval(intervalId); // Cleanup function to clear interval on unmount or condition change\n    }\n  }, [fetchDataOnButtonClick]); // Run effect when fetchDataOnButtonClick changes\n\n  // Function to start fetching data and set fetchDataOnButtonClick to true\n  const handleButtonClick = () => {\n    setFetchDataOnButtonClick(true);\n  };\n\n  return (\n    <div>\n      <h1>New York City Attractions</h1>\n      <button onClick={handleButtonClick}>Fetch Data</button>\n      <ul>\n        {newYorkData.map(attraction => (\n          <li key={attraction.id}>\n            <h2>{attraction.name}</h2>\n            <p><strong>Location:</strong> {attraction.location}</p>\n            <p><strong>Established:</strong> {attraction.established}</p>\n            <p>{attraction.description}</p>\n          </li>\n        ))}\n      </ul>\n      {fetchDataOnButtonClick && <p>Number: {number}</p>}\n    </div>\n  );\n};\n\nexport default CityData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,cAAc,CAACU,IAAI,CAAC;QACpBE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;QAClCN,SAAS,CAACU,UAAU,IAAIA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,IAAId,sBAAsB,EAAE;MAC1BI,SAAS,CAAC,CAAC,CAAC,CAAC;MACb,MAAMW,UAAU,GAAGC,WAAW,CAACZ,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;MAClDO,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,OAAO,MAAMK,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,CAACf,sBAAsB,CAAC,CAAC,CAAC,CAAC;;EAE9B;EACA,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BjB,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,oBACEN,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC5B,OAAA;MAAQ6B,OAAO,EAAEN,iBAAkB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvD5B,OAAA;MAAAwB,QAAA,EACGrB,WAAW,CAAC2B,GAAG,CAACC,UAAU,iBACzB/B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAKO,UAAU,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1B5B,OAAA;UAAAwB,QAAA,gBAAGxB,OAAA;YAAAwB,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,UAAU,CAACE,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvD5B,OAAA;UAAAwB,QAAA,gBAAGxB,OAAA;YAAAwB,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACG,UAAU,CAACG,WAAW;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7D5B,OAAA;UAAAwB,QAAA,EAAIO,UAAU,CAACI;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJxBG,UAAU,CAACK,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACJvB,sBAAsB,iBAAIL,OAAA;MAAAwB,QAAA,GAAG,UAAQ,EAACjB,MAAM;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAnDID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}