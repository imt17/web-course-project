{"ast":null,"code":"var _jsxFileName = \"/Users/mariailas/Desktop/web-project-new-york/frontend/src/component-ajax.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityData = () => {\n  _s();\n  const [newYorkData, setNewYorkData] = useState({});\n  let fetchDataOnButtonClick = false; // Example condition\n  let number = 0;\n  function fetchDataAndUpdate() {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/new-york-data');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setNewYorkData(data);\n        console.log('Fetched data:', data);\n        number += 1;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (fetchDataOnButtonClick) {\n      fetchData(); // Initial fetch\n      const intervalId = setInterval(fetchData, 10000); // Set interval to fetch data every 10 seconds\n    }\n  }\n\n  // Example condition change to simulate useEffect behavior\n  fetchDataOnButtonClick = true; // Set to true to start fetching data and set interval\n\n  // Initial call to fetchDataAndUpdate function\n  fetchDataAndUpdate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New York City Attractions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), fetchDataOnButtonClick && newYorkData[number]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CityData, \"N1MNjnVr8Sze+j2ZmDoX8+diTkk=\");\n_c = CityData;\nexport default CityData;\nvar _c;\n$RefreshReg$(_c, \"CityData\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CityData","_s","newYorkData","setNewYorkData","fetchDataOnButtonClick","number","fetchDataAndUpdate","fetchData","response","fetch","ok","Error","data","json","console","log","error","intervalId","setInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariailas/Desktop/web-project-new-york/frontend/src/component-ajax.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CityData = () => {\n    const [newYorkData, setNewYorkData] = useState({})\n    let fetchDataOnButtonClick = false; // Example condition\n    let number = 0;\n\n    function fetchDataAndUpdate() {\n      const fetchData = async () => {\n        try {\n          const response = await fetch('http://localhost:3001/new-york-data');\n          if (!response.ok) {\n            throw new Error('Failed to fetch data');\n          }\n          const data = await response.json();\n          setNewYorkData(data)\n          console.log('Fetched data:', data); \n          number += 1;\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n    \n      if (fetchDataOnButtonClick) {\n        fetchData(); // Initial fetch\n        const intervalId = setInterval(fetchData, 10000); // Set interval to fetch data every 10 seconds\n        \n      }\n    }\n    \n    // Example condition change to simulate useEffect behavior\n    fetchDataOnButtonClick = true; // Set to true to start fetching data and set interval\n    \n    // Initial call to fetchDataAndUpdate function\n    fetchDataAndUpdate();\n    \n\n  return (\n    <div>\n      <h1>New York City Attractions</h1>\n      {fetchDataOnButtonClick && (\n\n          newYorkData[number]\n\n      )}\n    </div>\n  );\n};\n\nexport default CityData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,IAAIO,sBAAsB,GAAG,KAAK,CAAC,CAAC;EACpC,IAAIC,MAAM,GAAG,CAAC;EAEd,SAASC,kBAAkBA,CAAA,EAAG;IAC5B,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCV,cAAc,CAACS,IAAI,CAAC;QACpBE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;QAClCP,MAAM,IAAI,CAAC;MACb,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,IAAIZ,sBAAsB,EAAE;MAC1BG,SAAS,CAAC,CAAC,CAAC,CAAC;MACb,MAAMU,UAAU,GAAGC,WAAW,CAACX,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IAEpD;EACF;;EAEA;EACAH,sBAAsB,GAAG,IAAI,CAAC,CAAC;;EAE/B;EACAE,kBAAkB,CAAC,CAAC;EAGtB,oBACEP,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCnB,sBAAsB,IAEnBF,WAAW,CAACG,MAAM,CAErB;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7CID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}