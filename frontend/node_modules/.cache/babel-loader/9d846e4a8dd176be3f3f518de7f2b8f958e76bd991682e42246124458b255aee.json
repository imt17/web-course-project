{"ast":null,"code":"var _jsxFileName = \"/Users/mariailas/Desktop/web-project-new-york/frontend/src/component-ajax.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityData = () => {\n  _s();\n  const [newYorkData, setNewYorkData] = useState({});\n  let fetchDataOnButtonClick = false; // Example condition\n  let number = 0;\n  function fetchDataAndUpdate() {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/new-york-data');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        console.log('Fetched data:', data);\n        number += 1;\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    if (fetchDataOnButtonClick) {\n      fetchData(); // Initial fetch\n      const intervalId = setInterval(fetchData, 10000); // Set interval to fetch data every 10 seconds\n      return () => clearInterval(intervalId); // Cleanup function to clear interval on unmount or condition change\n    }\n  }\n\n  // Example condition change to simulate useEffect behavior\n  fetchDataOnButtonClick = true; // Set to true to start fetching data and set interval\n\n  // Initial call to fetchDataAndUpdate function\n  fetchDataAndUpdate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New York City Attractions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), fetchDataOnButtonClick && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data[number].map(attraction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: attraction.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }, this), \" \", attraction.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Established:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }, this), \" \", attraction.established]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: attraction.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, attraction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CityData, \"N1MNjnVr8Sze+j2ZmDoX8+diTkk=\");\n_c = CityData;\nexport default CityData;\nvar _c;\n$RefreshReg$(_c, \"CityData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CityData","_s","newYorkData","setNewYorkData","fetchDataOnButtonClick","number","fetchDataAndUpdate","fetchData","response","fetch","ok","Error","data","json","console","log","error","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","attraction","name","location","established","description","id","_c","$RefreshReg$"],"sources":["/Users/mariailas/Desktop/web-project-new-york/frontend/src/component-ajax.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CityData = () => {\n    const [newYorkData, setNewYorkData] = useState({})\n    let fetchDataOnButtonClick = false; // Example condition\n    let number = 0;\n\n    function fetchDataAndUpdate() {\n      const fetchData = async () => {\n        try {\n          const response = await fetch('http://localhost:3001/new-york-data');\n          if (!response.ok) {\n            throw new Error('Failed to fetch data');\n          }\n          const data = await response.json();\n          console.log('Fetched data:', data); \n          number += 1;\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n    \n      if (fetchDataOnButtonClick) {\n        fetchData(); // Initial fetch\n        const intervalId = setInterval(fetchData, 10000); // Set interval to fetch data every 10 seconds\n        return () => clearInterval(intervalId); // Cleanup function to clear interval on unmount or condition change\n      }\n    }\n    \n    // Example condition change to simulate useEffect behavior\n    fetchDataOnButtonClick = true; // Set to true to start fetching data and set interval\n    \n    // Initial call to fetchDataAndUpdate function\n    fetchDataAndUpdate();\n    \n\n  return (\n    <div>\n      <h1>New York City Attractions</h1>\n      {fetchDataOnButtonClick && (\n        <ul>\n          {data[number].map((attraction) => (\n            <li key={attraction.id}>\n              <h2>{attraction.name}</h2>\n              <p><strong>Location:</strong> {attraction.location}</p>\n              <p><strong>Established:</strong> {attraction.established}</p>\n              <p>{attraction.description}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default CityData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}